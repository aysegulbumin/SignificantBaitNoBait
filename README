There are 4 different things that can be done with this code.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

0.Merging the Kmer Counts 

1.Calculating the Log Fold Change

2.Merging 2 fasta files into 1 fasta file.

3.Count given K-mers in fasta file.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

How to Run Test Cases?

For test cases assume that the read files are NotContam5.fasta and NotContam8.fasta, and the k-mer(4-mer) counts are Sorted5.txt and Sorted8.txt.


	Given NotContam5.fasta,NotContam8.fasta and Sorted5.txt Sorted8.txt,
		one can get the ultimate matrix needed to feed into the Machine Learning part by following these steps. 
		./main 0 1 TestAll.txt 2 Sorted5.txt Sorted8.txt
		./main 1 2 1 2 1 TestAll.txt Bait.fasta NoBait.fasta
		./main 2 Bait.fasta NoBait.fasta Merged.fasta (One can use another method to combine two fasta files into Merged.fasta)
		./main 3 NotContam5.fasta Merged.fasta BaitMatrix.txt
		./main 3 NotContam8.fasta Merged.fasta NoBaitMatrix.txt

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
How to Run?


 
1.Open terminal and go to the code's directory.

2.Run >make

3. 
	Note that the first parameter after main denotes which mode to use. And the rest of the parameters change from mode to mode. 

        (The parameter should be 0 for Merging the Kmer Counts , 1 for Calculating the Log Fold Change, 2 for Merging 2 fasta files into 1 fasta file, 3 for Count given K-mers in fasta file.)

	Case1: Merging the Kmer Counts 
		
		Input: Threshold, N tab separated (or space separated) files.

		Output: Comma separated matrix, rows are kmers and columns are the files. Each index denotes the number of occurence of that particular kmer in that particular file.
	
		Command Line : ./main 0 threshold# /path/to/output/file n# /path/to/input_1 /path/to/input_2 ... /path/to/input_n
	
				
				Test: ./main 0 1 TestAll.txt 2 Sorted5.txt Sorted8.txt

				* The input files are assumed to be alphabetically sorted 
				
				Details:
					 1st parameter: 0
        	    			 2nd parameter: (int) threshold - If there is no restriction threshold=1.
                    			 3rd parameter: output file
                    			 4th parameter: (int) n - Number of input files
                    			 5th- nth parameter: input files.
				
					0 - denotes that the program is in Merging the Kmer Counts mode.

					threshold#- is an integer.
						It denotes the minimum number of files that needs to have non zero value.
						(i.e if it is 1 then the output will consist of the kmers and counts that occur in at least one of the files.)
						If you do not want to restrict the output, write 1 instead of threshold.
					n# -is an integer.
						It denotes the number of input files that one wants to merge. The parameter "n" will be followed by n number of parameters that are paths to the n input files.

		
	Case2: Calculating the Log Fold Change
		
		Input: Comma separated matrix as an input-the same as the output of Case1, Fold value which will be used as threshold, number of bait files+ number of no-bait files.
			
			* The number of bait files to consider is assumed to be equal to the number of no-bait files to consider. Hence the given number must be even.
		
		Output: Significant Bait k-mers and No-Bait k-mers in fasta format.

		Command Line:>./main 1 k bait_index1 bait_index2 ... bait_indexn nobait_index1 nobait_index2 ... nobait_indexn fold_value /path/to/input/file /path/to/Significant/BaitKmers /path/to/Significant/NoBaitKmers

			Test:./main 1 2 1 2 1 TestAll.txt Bait.fasta NoBait.fasta

			*I picked the fold value to be 1 to observe more significant k-mers.
			
			Details:
	
				1- Shows that the program is in calculating the log fold change mod
				
				k- is equal to 2n here.
				
				bait_index# - is an integer and denotes the indices of bait files in the input file -denotes whether it is 1st column or 2nd or 3rd etc. There must be k/2 such indices.

				nobait_index# - is an integer and denotes the indices of no-bait files in the input file -denotes whether it is 1st column or 2nd or 3rd etc. There must be k/2 such indices.
		
				fold_value - is an integer parameter that shows which kmers to pick as significant, in most of the cases it is set to either 2 or 3. 

				*Note that it is log fold change, not direct fold change-


	Case3: Merging 2 fasta files into 1 fasta file
               
		The user can use his/her own method to combine two fasta files.It is not a must to use this step.But I provide this option as well.
		
		Input : 2 fasta files
		
		Output : 1 fasta file
			
		Command Line: >./main 2 /path/to/input/file1 /path/to/input/file2 /path/to/outputfile

			Test: ./main 2 Bait.fasta NoBait.fasta Merged.fasta
		
			Details:

				2 - shows that the program is in merging 2 fasta files mode.

				The other parameters are self explanatory.			

	Case4: Count given K-mers in fasta file
	
		Input : 1 Reads file in fasta format , 1 k-mers file in fasta format

		Output : A space separated matrix consisting of integers only. The rows are the Reads and the columns are the kmers, every index represents the count of that particular kmer in that particular read.

		Command Line: >./main 3 /path/to/Read/file /path/to/Kmer/file /path/to/output/file
			
			Test:./main 3 NotContam5.fasta Merged.fasta BaitMatrix.txt
			     ./main 3 NotContam8.fasta Merged.fasta NoBaitMatrix.txt
		
			Details:
				
				3 - shows that the program is in Count given K-mers in fasta file mode.

				The other parameters are self explanatory.
	
				Both input files are expected in fasta format.

	
				

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

