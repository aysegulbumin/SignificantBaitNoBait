Preprocessing

--------------------------------------------------------------------------------------------------------------------------
This program assumes that the following pre-processing is done.

1.Count the k-mers in the reads given in fastq format.

	We used KMC for counting k-mers.
	
        Batch file (kmc.sh) that we used is provided. 

--------------------------------------------------------------------------------------------------------------------------

There are 4 different things that can be done with this code.

--------------------------------------------------------------------------------------------------------------------------

0.Merging the Kmer Counts 

1.Calculating the Log Fold Change

2.Merging 2 fasta files into 1 fasta file.

3.Count given K-mers in fasta file.

--------------------------------------------------------------------------------------------------------------------------

How to Run Test Cases?

5f.fastq, 5r.fastq, 8f.fastq, 8r.fastq, Kmer5.txt, Kmer8.txt files are given.
        
You can change the parameters in test.sh file and try with different settings.

 
1.Open terminal and go to the code's directory.

2.Type > ./test.sh 

3.OUTPUT: 
	
	Bait_Matrix.txt and NoBait_Matrix.txt are the matrices to be fed into Machine Learning.

--------------------------------------------------------------------------------------------------------------------------
How to Run?


 
1.Open terminal and go to the code's directory.

2.Type >make

3. 
	
	The make file above creates an executable called "main". This
	program runs in 4 modes for 4 different purposes (cases). The
	first parameter after main denotes which mode to use. And the
	rest of the parameters change from mode to mode. Below, we
	explain what it does in each mode and how to run it in each mode.


	Mode 0: Merging the Kmer Counts 
		
		This case takes 6 or more parameters.

		Command Line : ./main 0 threshold outputfile numberOfInputFiles [List of input files]
			We explain parameters below
			- First parameter is 0
			- Second parameter (threshold) is a positive
			integer which denotes the minimum number of
			input files which needs to contain given k-mer to consider that k-mer as abundant enough.
			- Third parameter (outputFile) specifies the name of the file where result is written
			- Fourth parameter (numberOfInputFiles) is an integer
			with value at least the minimum of 2 and the
			second parameter.
			- Remaining parameters is a list of file names
			indicating the input files containing k-Mers
			and counts of k-Mers


		OUTPUT: Comma separated matrix, rows are kmers and
		columns are the files. Each index denotes the number
		of occurence of that particular kmer in that
		particular file.

		SAMPLE OUTPUT file looks like below when two files are
		       provided as input, for 5-grams and threshold = 1:
----------------------------------
		       ,inputfile1,inputfile2
		       AAAAC,0,1
		       AAACG,1,1
		       AAAGA,2,0
----------------------------------
	

		HOW TO RUN -- EXAMPLE:	./main 0 1 MergedKmers5_8.txt 2 Kmer5.txt Kmer8.txt 

	
				

		
	Mode 1: Calculating the Log Fold Change
		
		This case takes 8 or more parameters.

		Command Line : >./main 1 k [List of Bait indices] [List of NoBait indices] FoldValue inputFile outputFile1 outputFile2 
			
			We explain parameters below
			- First parameter is 1
			- Second parameter (k) is a positive even
			integer which denotes the number of indices for bait files and no-bait files.
			Its minimum value is 2.
			- List of bait indices indicate indices of bait files in the input file -
			Denotes whether it is 1st column or 2nd or 3rd etc. There must be k/2 such indices.
			- List of no-bait indices indicate indices of no-bait files in the input file -
			Denotes whether it is 1st column or 2nd or 3rd etc. There must be k/2 such indices.
			- The next parameter (FoldValue) is an integer parameter, which denotes a threshold for log fold value
			that consider k-mer to be significant.
			In most of the cases it is set to either 2 or 3.
			- The next parameter (inputFile) specifies the name of the file that contains comma separated matrix (output of Mode 0)
			whose rows are kmers and columns are the files.
			- The next parameter (outputFile1) specifies the name of the file that contains k-mers that are found to be
			significant for bait. This output file is in fasta format.
			- The next parameter (outputFile2) specifies the name of the file that contains k-mers that are found to be
			significant for no-bait. This output file is in fasta format.


		OUTPUT: Two fasta files. The first one contains the k-mers that are found to be significant for bait after log fold change calculation.
		The second one contains the k-mers that are found to be significant for no-bait after log fold change calculation.

		Bait.fasta, NoBait.fasta

		SAMPLE OUTPUT file (NoBait.fasta) looks like below when the output of Mode 1 is given as input.
----------------------------------
		      	>1
			ATGG
			>2
			CAAG
			>3
			CCAC
			>4
			CCGA
			>5
			TAAA
----------------------------------
	

		HOW TO RUN -- EXAMPLE:	./main 1 2 1 2 1 MergedKmers5_8.txt Bait.fasta NoBait.fasta



	Mode 2: Merging 2 fasta files into 1 fasta file
		
			
		(This mode is optional. Any other method to merge two fasta files can be used. )
		
		This case takes 4 parameters.

		Command Line : >./main 2 inputFile1 inputFile2 outputFile
			
			We explain parameters below
			- First parameter is 2
			- Second parameter (inputFile1) specifies the name of the file that is subject to be merged.
			It is in fasta format.
			- Third parameter (inputFile2) specifies the name of the second file that is subject to be merged.
			It is in fasta format.
			- Fourth parameter (outputFile) specifies the name of the file that is the merged fasta file.
	
		OUTPUT: One fasta file which is the merged version of two input files.
	 
		Merged.fasta

		SAMPLE OUTPUT file  looks like below when the two fasta files (output of Mode 2) are given as input.
----------------------------------
		      	>1
			ATGG
			>2
			CAAG
			>3
			CCAC
			>4
			CCGA
			>5
			TAAA
----------------------------------


		HOW TO RUN -- EXAMPLE:	./main 2 Bait.fasta NoBait.fasta SignificantKmers.fasta


	Mode 3:  Count given K-mers in given fastq files and Create Matrix
		
		This case takes 5 parameters.

		Command Line : >./main 3 forwardReadFile reverseReadFile kmersFile outputFile
		
		
			We explain parameters below
			- First parameter is 3
			- Second parameter (forwardReadFile) specifies the name of the file that contains forward reads.
			It is in fastq format.
			- Third parameter (reverseReadFile) specifies the name of the file that contains reverse reads.
			It is in fastq format.
			- Fourth parameter (kmersFile) specifies the name of the file that contains kmers to be counted.
			It is in fasta format.
			- Fifth parameter (outputFile) specifies the name of the file that contains the resultant matrix.
			The matrix contains the counts of the given k-mers in given reads. Rows represents the k-mers
			and columns represent the reads.
		
		OUTPUT: A file that contains the counts of the given k-mers in given reads, in tab separated format.
		
		Bait_Matrix.txt

		SAMPLE OUTPUT file  looks like below when fastq files contain 10 reads in total, and number of significant k-mers are 5.
----------------------------------
		1 0 1 0 4 
		1 0 0 0 2 
		0 0 0 0 1 
		0 1 0 0 1 
		0 0 1 2 0 
		1 0 0 1 2 
		0 0 0 0 0 
		0 1 0 0 3 
		0 1 0 0 2 
		0 0 0 0 1 		     
----------------------------------
			
		HOW TO RUN -- EXAMPLE:	./main 3 5f.fastq 5r.fastq SignificantKmers.fasta Bait_Matrix.txt
					or
					./main 3 8f.fastq 8r.fastq SignificantKmers.fasta NoBait_Matrix.txt	
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

